<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>French Beginner Notes PDF Generator</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <style>
        body {
            font-family: 'Segoe UI', Arial, sans-serif;
            max-width: 900px;
            margin: 0 auto;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }
        .container {
            background: white;
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
        }
        h1 {
            color: #2d3748;
            text-align: center;
            margin-bottom: 30px;
            font-size: 28px;
        }
        .download-btn {
            background: linear-gradient(45deg, #4CAF50, #45a049);
            color: white;
            border: none;
            padding: 20px 40px;
            font-size: 20px;
            border-radius: 10px;
            cursor: pointer;
            display: block;
            margin: 30px auto;
            transition: all 0.3s;
            font-weight: bold;
        }
        .download-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(76, 175, 80, 0.3);
        }
        .download-btn:active {
            transform: translateY(0);
        }
        .preview {
            background: #f8f9fa;
            padding: 25px;
            border-radius: 10px;
            margin: 25px 0;
            border-left: 5px solid #4CAF50;
        }
        .preview h3 {
            color: #2d3748;
            margin-top: 0;
        }
        .preview ul {
            list-style: none;
            padding: 0;
        }
        .preview li {
            padding: 8px 0;
            padding-left: 25px;
            position: relative;
        }
        .preview li:before {
            content: "‚úì";
            position: absolute;
            left: 0;
            color: #4CAF50;
            font-weight: bold;
        }
        .status {
            text-align: center;
            margin: 20px 0;
            font-weight: bold;
            padding: 15px;
            border-radius: 8px;
        }
        .success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        .loading {
            background: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }
        .download-info {
            background: #e3f2fd;
            padding: 20px;
            border-radius: 10px;
            margin: 25px 0;
            border-left: 5px solid #2196f3;
        }
        .download-info h3 {
            color: #1565c0;
            margin-top: 0;
        }
        .download-info code {
            background: #f5f5f5;
            padding: 3px 8px;
            border-radius: 4px;
            color: #d32f2f;
            font-weight: bold;
        }
        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin: 20px 0;
        }
        .feature-card {
            background: #fff;
            padding: 15px;
            border-radius: 8px;
            border: 1px solid #e0e0e0;
            text-align: center;
        }
        .feature-icon {
            font-size: 24px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üá´üá∑ French Beginner Notes for Samridhi</h1>
        
        <div class="preview">
            <h3>üìö Complete PDF Contents (‡§∏‡§≠‡•Ä ‡§ï‡•Å‡§õ Hindi ‡§Æ‡•á‡§Ç ‡§≠‡•Ä ‡§π‡•à!):</h3>
            <div class="feature-grid">
                <div class="feature-card">
                    <div class="feature-icon">üî§</div>
                    <strong>Alphabet</strong><br>
                    Pronunciation + Hindi
                </div>
                <div class="feature-card">
                    <div class="feature-icon">üëã</div>
                    <strong>Greetings</strong><br>
                    Basic Phrases
                </div>
                <div class="feature-card">
                    <div class="feature-icon">üî¢</div>
                    <strong>Numbers</strong><br>
                    0-100 with Hindi
                </div>
                <div class="feature-card">
                    <div class="feature-icon">üë§</div>
                    <strong>Pronouns</strong><br>
                    Je, Tu, Il, Elle
                </div>
                <div class="feature-card">
                    <div class="feature-icon">üë®‚Äçüë©‚Äçüëß‚Äçüë¶</div>
                    <strong>Family</strong><br>
                    P√®re, M√®re, etc.
                </div>
                <div class="feature-card">
                    <div class="feature-icon">üé®</div>
                    <strong>Colors</strong><br>
                    Rouge, Bleu, Vert
                </div>
                <div class="feature-card">
                    <div class="feature-icon">üìÖ</div>
                    <strong>Days & Months</strong><br>
                    Complete Calendar
                </div>
                <div class="feature-card">
                    <div class="feature-icon">‚ö°</div>
                    <strong>Verbs</strong><br>
                    Common + Conjugations
                </div>
                <div class="feature-card">
                    <div class="feature-icon">üí¨</div>
                    <strong>Expressions</strong><br>
                    Daily Use Phrases
                </div>
                <div class="feature-card">
                    <div class="feature-icon">üìù</div>
                    <strong>Practice Sheet</strong><br>
                    Daily Exercises
                </div>
            </div>
        </div>

        <button class="download-btn" onclick="createAndDownloadPDF()">
            üì• Download ‡§ï‡§∞‡•á‡§Ç - French Notes PDF
        </button>
        
        <div id="status" class="status" style="display: none;"></div>

        <div class="download-info">
            <h3>üìç PDF ‡§ï‡§π‡§æ‡§Å download ‡§π‡•ã‡§ó‡•Ä?</h3>
            <p><strong>File name:</strong> <code>French_Notes_Samridhi.pdf</code></p>
            <p><strong>Location:</strong> ‡§Ü‡§™‡§ï‡•á browser ‡§ï‡§æ Downloads folder ‡§Æ‡•á‡§Ç</p>
            <ul>
                <li><strong>Windows:</strong> C:\Users\[‡§Ü‡§™‡§ï‡§æ ‡§®‡§æ‡§Æ]\Downloads\</li>
                <li><strong>Mac:</strong> Downloads folder ‡§Æ‡•á‡§Ç</li>
                <li><strong>Mobile:</strong> Downloads app ‡§Æ‡•á‡§Ç ‡§¶‡•á‡§ñ‡•á‡§Ç</li>
            </ul>
            <p>üí° <strong>Tip:</strong> Download ‡§ï‡•á ‡§¨‡§æ‡§¶ browser ‡§ï‡•á bottom ‡§Æ‡•á‡§Ç notification ‡§¶‡§ø‡§ñ‡•á‡§ó‡•Ä</p>
        </div>
    </div>

    <script>
        function createAndDownloadPDF() {
            // Show loading status
            const statusDiv = document.getElementById('status');
            statusDiv.style.display = 'block';
            statusDiv.className = 'status loading';
            statusDiv.innerHTML = '‚è≥ PDF ‡§¨‡§®‡§æ‡§à ‡§ú‡§æ ‡§∞‡§π‡•Ä ‡§π‡•à... Please wait...';
            
            try {
                const { jsPDF } = window.jspdf;
                const doc = new jsPDF();
                
                // Page setup
                let y = 20;
                const margin = 20;
                const pageHeight = 280;
                
                // Helper function to check page break
                function checkPageBreak(requiredSpace) {
                    if (y + requiredSpace > pageHeight) {
                        doc.addPage();
                        y = 20;
                    }
                }
                
                // Title
                doc.setFontSize(24);
                doc.setTextColor(25, 118, 210);
                doc.text('French Beginner Notes', 105, y, { align: 'center' });
                y += 15;
                
                doc.setFontSize(16);
                doc.setTextColor(100, 100, 100);
                doc.text('Prepared for Samridhi', 105, y, { align: 'center' });
                y += 20;
                
                doc.setFontSize(12);
                doc.setTextColor(60, 60, 60);
                doc.text('Complete French learning guide with Hindi translations', 105, y, { align: 'center' });
                y += 25;
                
                // Section 1: Alphabet
                checkPageBreak(60);
                doc.setFontSize(16);
                doc.setTextColor(156, 39, 176);
                doc.text('1. French Alphabet & Pronunciation', margin, y);
                y += 12;
                
                doc.setFontSize(10);
                doc.setTextColor(0, 0, 0);
                const alphabet = [
                    'A - "ah" sound - ‡§Ö ‡§ï‡•Ä ‡§§‡§∞‡§π',
                    'B - "bay" - ‡§¨‡•á', 
                    'C - "say" - ‡§∏‡•á',
                    'D - "day" - ‡§¶‡•á',
                    'E - "uh" - ‡§π‡§≤‡•ç‡§ï‡§æ ‡§Ö',
                    'F - "eff" - ‡§è‡§´',
                    'G - "zhay" - ‡§ù‡•á',
                    'H - "ash" - ‡§Ü‡§∂ (silent)',
                    'I - "ee" - ‡§à',
                    'J - "zhee" - ‡§ù‡•Ä',
                    'K - "kah" - ‡§ï‡§æ',
                    'L - "ell" - ‡§è‡§≤',
                    'M - "emm" - ‡§è‡§Æ',
                    'N - "enn" - ‡§è‡§®',
                    'O - "oh" - ‡§ì',
                    'P - "pay" - ‡§™‡•á',
                    'Q - "koo" - ‡§ï‡•Ç', 
                    'R - "err" - ‡§è‡§∞‡•ç‡§∞ (rolled)',
                    'S - "ess" - ‡§è‡§∏',
                    'T - "tay" - ‡§§‡•á',
                    'U - "oo" - ‡§ä',
                    'V - "vay" - ‡§µ‡•á',
                    'W - "double-vay" - ‡§°‡§¨‡§≤-‡§µ‡•á',
                    'X - "eeks" - ‡§à‡§ï‡•ç‡§∏',
                    'Y - "ee-grek" - ‡§à-‡§ó‡•ç‡§∞‡•á‡§ï',
                    'Z - "zed" - ‡§ú‡•á‡§°'
                ];
                
                alphabet.forEach((letter, index) => {
                    if (index % 2 === 0) {
                        checkPageBreak(5);
                        doc.text(letter, margin, y);
                        if (alphabet[index + 1]) {
                            doc.text(alphabet[index + 1], margin + 90, y);
                        }
                        y += 5;
                    }
                });
                
                y += 10;
                
                // Section 2: Greetings
                checkPageBreak(40);
                doc.setFontSize(16);
                doc.setTextColor(76, 175, 80);
                doc.text('2. Greetings & Basic Phrases', margin, y);
                y += 12;
                
                doc.setFontSize(10);
                doc.setTextColor(0, 0, 0);
                const greetings = [
                    'Bonjour - Hello/Good morning - ‡§∏‡•Å‡§¨‡§π ‡§ï‡§æ ‡§Ö‡§≠‡§ø‡§µ‡§æ‡§¶‡§®',
                    'Bonsoir - Good evening - ‡§∂‡§æ‡§Æ ‡§ï‡§æ ‡§Ö‡§≠‡§ø‡§µ‡§æ‡§¶‡§®', 
                    'Salut - Hi/Bye (informal) - ‡§π‡•à‡§≤‡•ã/‡§¨‡§æ‡§Ø',
                    'Au revoir - Goodbye - ‡§Ö‡§≤‡§µ‡§ø‡§¶‡§æ',
                    'Merci - Thank you - ‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶',
                    'De rien - You\'re welcome - ‡§ï‡•ã‡§à ‡§¨‡§æ‡§§ ‡§®‡§π‡•Ä‡§Ç',
                    'S\'il vous pla√Æt - Please - ‡§ï‡•É‡§™‡§Ø‡§æ',
                    'Excusez-moi - Excuse me - ‡§Æ‡§æ‡§´ ‡§ï‡§∞‡•á‡§Ç',
                    'Pardon - Sorry - ‡§ï‡•ç‡§∑‡§Æ‡§æ ‡§ï‡§∞‡•á‡§Ç',
                    'Oui - Yes - ‡§π‡§æ‡§Å',
                    'Non - No - ‡§®‡§π‡•Ä‡§Ç'
                ];
                
                greetings.forEach(greeting => {
                    checkPageBreak(5);
                    doc.text(greeting, margin, y);
                    y += 5;
                });
                
                y += 10;
                
                // Section 3: Numbers
                checkPageBreak(50);
                doc.setFontSize(16);
                doc.setTextColor(255, 152, 0);
                doc.text('3. Numbers (‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ‡§è‡§Ç) 0-100', margin, y);
                y += 12;
                
                doc.setFontSize(10);
                const numbers = [
                    'Basic Numbers (0-10):',
                    '0-z√©ro, 1-un, 2-deux, 3-trois, 4-quatre, 5-cinq',
                    '6-six, 7-sept, 8-huit, 9-neuf, 10-dix',
                    '',
                    '11-19: 11-onze, 12-douze, 13-treize, 14-quatorze',
                    '15-quinze, 16-seize, 17-dix-sept, 18-dix-huit, 19-dix-neuf',
                    '',
                    'Tens: 20-vingt, 30-trente, 40-quarante, 50-cinquante',
                    '60-soixante, 70-soixante-dix, 80-quatre-vingts',
                    '90-quatre-vingt-dix, 100-cent'
                ];
                
                numbers.forEach(num => {
                    checkPageBreak(5);
                    doc.text(num, margin, y);
                    y += 5;
                });
                
                y += 10;
                
                // Section 4: Pronouns
                checkPageBreak(35);
                doc.setFontSize(16);
                doc.setTextColor(33, 150, 243);
                doc.text('4. Pronouns (‡§∏‡§∞‡•ç‡§µ‡§®‡§æ‡§Æ)', margin, y);
                y += 12;
                
                doc.setFontSize(10);
                const pronouns = [
                    'Je - I - ‡§Æ‡•à‡§Ç (J\' before vowels)',
                    'Tu - You (informal) - ‡§§‡•Å‡§Æ',
                    'Il - He - ‡§µ‡§π (masculine)',
                    'Elle - She - ‡§µ‡§π (feminine)',
                    'Nous - We - ‡§π‡§Æ',
                    'Vous - You (formal/plural) - ‡§Ü‡§™',
                    'Ils - They (masculine) - ‡§µ‡•á (‡§™‡•Å‡§∞‡•Å‡§∑)',
                    'Elles - They (feminine) - ‡§µ‡•á (‡§Æ‡§π‡§ø‡§≤‡§æ)'
                ];
                
                pronouns.forEach(pronoun => {
                    checkPageBreak(5);
                    doc.text(pronoun, margin, y);
                    y += 5;
                });
                
                y += 10;
                
                // Section 5: Family
                checkPageBreak(40);
                doc.setFontSize(16);
                doc.setTextColor(156, 39, 176);
                doc.text('5. Family Words (‡§™‡§æ‡§∞‡§ø‡§µ‡§æ‡§∞‡§ø‡§ï ‡§∂‡§¨‡•ç‡§¶)', margin, y);
                y += 12;
                
                doc.setFontSize(10);
                const family = [
                    'La famille - Family - ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞',
                    'P√®re/Papa - Father/Dad - ‡§™‡§ø‡§§‡§æ/‡§™‡§æ‡§™‡§æ',
                    'M√®re/Maman - Mother/Mom - ‡§Æ‡§æ‡§§‡§æ/‡§Æ‡§Æ‡•ç‡§Æ‡•Ä',
                    'Fr√®re - Brother - ‡§≠‡§æ‡§à',
                    'S≈ìur - Sister - ‡§¨‡§π‡§®',
                    'Fils - Son - ‡§¨‡•á‡§ü‡§æ',
                    'Fille - Daughter - ‡§¨‡•á‡§ü‡•Ä',
                    'Grand-p√®re - Grandfather - ‡§¶‡§æ‡§¶‡§æ‡§ú‡•Ä/‡§®‡§æ‡§®‡§æ‡§ú‡•Ä',
                    'Grand-m√®re - Grandmother - ‡§¶‡§æ‡§¶‡•Ä‡§ú‡•Ä/‡§®‡§æ‡§®‡•Ä‡§ú‡•Ä',
                    'Oncle - Uncle - ‡§ö‡§æ‡§ö‡§æ/‡§Æ‡§æ‡§Æ‡§æ',
                    'Tante - Aunt - ‡§ö‡§æ‡§ö‡•Ä/‡§Æ‡§æ‡§Æ‡•Ä'
                ];
                
                family.forEach(member => {
                    checkPageBreak(5);
                    doc.text(member, margin, y);
                    y += 5;
                });
                
                y += 10;
                
                // Section 6: Colors
                checkPageBreak(35);
                doc.setFontSize(16);
                doc.setTextColor(255, 152, 0);
                doc.text('6. Colors (‡§∞‡§Ç‡§ó)', margin, y);
                y += 12;
                
                doc.setFontSize(10);
                const colors = [
                    'Rouge - Red - ‡§≤‡§æ‡§≤',
                    'Bleu - Blue - ‡§®‡•Ä‡§≤‡§æ', 
                    'Vert - Green - ‡§π‡§∞‡§æ',
                    'Jaune - Yellow - ‡§™‡•Ä‡§≤‡§æ',
                    'Noir - Black - ‡§ï‡§æ‡§≤‡§æ',
                    'Blanc - White - ‡§∏‡§´‡•á‡§¶',
                    'Rose - Pink - ‡§ó‡•Å‡§≤‡§æ‡§¨‡•Ä',
                    'Orange - Orange - ‡§®‡§æ‡§∞‡§Ç‡§ó‡•Ä',
                    'Violet - Purple - ‡§¨‡•à‡§Ç‡§ó‡§®‡•Ä',
                    'Gris - Gray - ‡§∏‡•ç‡§≤‡•á‡§ü‡•Ä',
                    'Marron - Brown - ‡§≠‡•Ç‡§∞‡§æ'
                ];
                
                colors.forEach(color => {
                    checkPageBreak(5);
                    doc.text(color, margin, y);
                    y += 5;
                });
                
                y += 10;
                
                // Section 7: Days & Months
                checkPageBreak(45);
                doc.setFontSize(16);
                doc.setTextColor(76, 175, 80);
                doc.text('7. Days & Months (‡§¶‡§ø‡§® ‡§î‡§∞ ‡§Æ‡§π‡•Ä‡§®‡•á)', margin, y);
                y += 12;
                
                doc.setFontSize(10);
                const daysMonths = [
                    'Days of the Week:',
                    'Lundi-Monday-‡§∏‡•ã‡§Æ‡§µ‡§æ‡§∞, Mardi-Tuesday-‡§Æ‡§Ç‡§ó‡§≤‡§µ‡§æ‡§∞',
                    'Mercredi-Wednesday-‡§¨‡•Å‡§ß‡§µ‡§æ‡§∞, Jeudi-Thursday-‡§ó‡•Å‡§∞‡•Å‡§µ‡§æ‡§∞',
                    'Vendredi-Friday-‡§∂‡•Å‡§ï‡•ç‡§∞‡§µ‡§æ‡§∞, Samedi-Saturday-‡§∂‡§®‡§ø‡§µ‡§æ‡§∞',
                    'Dimanche-Sunday-‡§∞‡§µ‡§ø‡§µ‡§æ‡§∞',
                    '',
                    'Months:',
                    'Janvier-January, F√©vrier-February, Mars-March',
                    'Avril-April, Mai-May, Juin-June',
                    'Juillet-July, Ao√ªt-August, Septembre-September',
                    'Octobre-October, Novembre-November, D√©cembre-December'
                ];
                
                daysMonths.forEach(item => {
                    checkPageBreak(5);
                    doc.text(item, margin, y);
                    y += 5;
                });
                
                y += 10;
                
                // Section 8: Verbs
                checkPageBreak(60);
                doc.setFontSize(16);
                doc.setTextColor(33, 150, 243);
                doc.text('8. Common Verbs (‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ‡§è‡§Ç)', margin, y);
                y += 12;
                
                doc.setFontSize(10);
                const verbs = [
                    '√ätre - To be - ‡§π‡•ã‡§®‡§æ',
                    '  Je suis-I am, Tu es-You are, Il/Elle est-He/She is',
                    '  Nous sommes-We are, Vous √™tes-You are, Ils sont-They are',
                    '',
                    'Avoir - To have - ‡§∞‡§ñ‡§®‡§æ/‡§π‡•ã‡§®‡§æ',
                    '  J\'ai-I have, Tu as-You have, Il/Elle a-He/She has',
                    '  Nous avons-We have, Vous avez-You have, Ils ont-They have',
                    '',
                    'Other Important Verbs:',
                    'Aller - To go - ‡§ú‡§æ‡§®‡§æ',
                    'Faire - To do/make - ‡§ï‡§∞‡§®‡§æ/‡§¨‡§®‡§æ‡§®‡§æ',
                    'Venir - To come - ‡§Ü‡§®‡§æ',
                    'Voir - To see - ‡§¶‡•á‡§ñ‡§®‡§æ',
                    'Savoir - To know - ‡§ú‡§æ‡§®‡§®‡§æ'
                ];
                
                verbs.forEach(verb => {
                    checkPageBreak(5);
                    doc.text(verb, margin, y);
                    y += 5;
                });
                
                y += 10;
                
                // Section 9: Expressions
                checkPageBreak(45);
                doc.setFontSize(16);
                doc.setTextColor(156, 39, 176);
                doc.text('9. Useful Expressions (‡§â‡§™‡§Ø‡•ã‡§ó‡•Ä ‡§µ‡§æ‡§ï‡•ç‡§Ø)', margin, y);
                y += 12;
                
                doc.setFontSize(10);
                const expressions = [
                    'Comment allez-vous? - How are you? - ‡§Ü‡§™ ‡§ï‡•à‡§∏‡•á ‡§π‡•à‡§Ç?',
                    '√áa va? - How\'s it going? - ‡§ï‡•à‡§∏‡§æ ‡§ö‡§≤ ‡§∞‡§π‡§æ ‡§π‡•à?',
                    '√áa va bien - I\'m doing well - ‡§Æ‡•à‡§Ç ‡§†‡•Ä‡§ï ‡§π‡•Ç‡§Ç',
                    'O√π est...? - Where is...? - ‡§ï‡§π‡§æ‡§Å ‡§π‡•à...?',
                    'Qu\'est-ce que c\'est? - What is this? - ‡§Ø‡§π ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?',
                    'Combien √ßa co√ªte? - How much does it cost? - ‡§ï‡§ø‡§§‡§®‡•á ‡§ï‡§æ ‡§π‡•à?',
                    'Je ne comprends pas - I don\'t understand - ‡§Æ‡•à‡§Ç ‡§®‡§π‡•Ä‡§Ç ‡§∏‡§Æ‡§ù‡§æ',
                    'Pouvez-vous r√©p√©ter? - Can you repeat? - ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§¶‡•ã‡§π‡§∞‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç?',
                    'Parlez-vous anglais? - Do you speak English? - ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§Ö‡§Ç‡§ó‡•ç‡§∞‡•á‡§ú‡•Ä ‡§¨‡•ã‡§≤‡§§‡•á ‡§π‡•à‡§Ç?',
                    'Je voudrais... - I would like... - ‡§Æ‡•à‡§Ç ‡§ö‡§æ‡§π‡•Ç‡§Ç‡§ó‡§æ...'
                ];
                
                expressions.forEach(expr => {
                    checkPageBreak(5);
                    doc.text(expr, margin, y);
                    y += 5;
                });
                
                y += 15;
                
                // Section 10: Practice Sheet
                checkPageBreak(80);
                doc.setFontSize(16);
                doc.setTextColor(255, 152, 0);
                doc.text('10. Daily Practice Sheet (‡§¶‡•à‡§®‡§ø‡§ï ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏)', margin, y);
                y += 12;
                
                doc.setFontSize(10);
                const practice = [
                    'Date: _______________',
                    '',
                    'Word of the day: _________________________',
                    'Hindi meaning: ___________________________',
                    '',
                    'Phrase of the day: _______________________',
                    'Hindi translation: _______________________',
                    '',
                    'Write 3 times:',
                    'Bonjour   _______________   _______________',
                    'Merci     _______________   _______________',
                    'Au revoir _______________   _______________',
                    '',
                    'Today I learned:',
                    '_______________________________________',
                    '_______________________________________',
                    '_______________________________________',
                    '',
                    'Tomorrow I will practice:',
                    '_______________________________________'
                ];
                
                practice.forEach(line => {
                    checkPageBreak(5);
                    doc.text(line, margin, y);
                    y += 6;
                });
                
                // Success message
                statusDiv.className = 'status success';
                statusDiv.innerHTML = '‚úÖ PDF ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•à! Download ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à...';
                
                // Download the PDF
                doc.save('French_Notes_Samridhi.pdf');
                
                // Final success message
                setTimeout(() => {
                    statusDiv.innerHTML = 'üéâ PDF successfully downloaded!<br>üìÅ File: <strong>French_Notes_Samridhi.pdf</strong><br>üìç Check your Downloads folder';
                }, 1000);
                
                // Hide status after 10 seconds
                setTimeout(() => {
                    statusDiv.style.display = 'none';
                }, 10000);
                
            } catch (error) {
                console.error('Error creating PDF:', error);
                statusDiv.className = 'status';
                statusDiv.style.background = '#f8d7da';
                statusDiv.style.color = '#721c24';
                statusDiv.innerHTML = '‚ùå Error creating PDF. Please try again or refresh the page.';
            }
        }
    </script>
</body>
</html>
